package jpabook.start;

import javax.persistence.*;
import java.util.List;

/**
 * @author holyeye
 */
public class JpaMain {

    public static void main(String[] args) {

        //엔티티 매니저 팩토리 생성
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("jpabook");
        EntityManager em = emf.createEntityManager(); //엔티티 매니저 생성

        EntityTransaction tx = em.getTransaction(); //트랜잭션 기능 획득

        try {


            tx.begin(); //트랜잭션 시작            
            enroll(em);
            find(em);  //비즈니스 로직
            tx.commit();//트랜잭션 커밋

        } catch (Exception e) {
            e.printStackTrace();
            tx.rollback(); //트랜잭션 롤백
        } finally {
            em.close(); //엔티티 매니저 종료
        }

        emf.close(); //엔티티 매니저 팩토리 종료
    }
    
    public static void enroll(EntityManager em){
    	Team team1 = new Team();
    	
    	team1.setId("t1");
    	team1.setName("TeamOne");
    	em.persist(team1);
    	
    	
    	Team team2 = new Team();
    	team2.setId("t2");
    	team2.setName("TeamTwo");
    	em.persist(team2);
    	
    	
        String id = "id1";
        String id2 = "id2";
        
        Member member = new Member();
        member.setId(id);
        member.setUsername("지한");
        //member.setTeam(team1);       

        Member member2 = new Member();
        member2.setId(id2);
        member2.setUsername("길동2");
        //member2.setTeam(team2);
        
    	//등록
        em.persist(member);
        em.persist(member2);   
    }

    public static void find(EntityManager em) {
    	
    	
    	Team team2 = em.find(Team.class, "t2");
    	Member memberA = em.find(Member.class, "id1");
    	memberA.setTeam(team2);
    	
    	//팀에서 멤버를 부르는 예
    	for(Member member : team2.getMembers()){
    		System.out.println("멤버 "+ member.getId() +":"+ member.getUsername());
    	}
    	   	
    	
        //수정
        //member.setAge(20);

        //한 건 조회
       // Member findMember = em.find(Member.class, id);
       // System.out.println("findMember=" + findMember.getUsername() + ", age=" + findMember.getAge());

        //목록 조회
        //List<Member> members = em.createQuery("select m from Member m", Member.class).getResultList();
        //System.out.println("members.size=" + members.size());

        //삭제
        //em.remove(member);

    }
}
